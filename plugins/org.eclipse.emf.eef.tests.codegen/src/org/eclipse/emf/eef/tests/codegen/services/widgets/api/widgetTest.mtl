[comment 
 *******************************************************************************
 * Copyright (c) 2008-2010 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************
 /]
[module widgetTest('http://www.eclipse.org/emf/eef/components/1.0.0', 'http://www.eclipse.org/emf/2002/Ecore')/]

[import common /]
[import naming /]

[comment defines if a test can be generated for this case /]
[template public canGenerateTest(pec : PropertiesEditionComponent, peElement : PropertiesEditionElement)]false[/template]

[comment defines the command to apply in order to obtain the expected model /]
[template public updateExpectedModel(pec : PropertiesEditionComponent, peElement : PropertiesEditionElement)]
		// FIXME : define 'updateExpectedModel' (from widgetTest.mtl) for case ([peElement.views->first().representation.name/] - [peElement.model.eType.name/]) 
[/template]

[comment defines the bot command to process to edit the expected feature /]
[template public editFeature(pec : PropertiesEditionComponent, peElement : PropertiesEditionElement)]
		// FIXME : define 'editFeature' (from widgetTest.mtl) for case ([peElement.views->first().representation.name/] - [peElement.model.eType.name/]) 
[/template]

[template public editPropertyFeature(pec : PropertiesEditionComponent, peElement : PropertiesEditionElement)]
		// FIXME : define 'editPropertyFeature' (from widgetTest.mtl) for case ([peElement.views->first().representation.name/] - [peElement.model.eType.name/]) 
[/template]

[template public additionnalMethodsForWidgets(pec : PropertiesEditionComponent, peElement : PropertiesEditionElement)]
		// FIXME : define 'additionnalMethodsForWidgets' (from widgetTest.mtl) for case ([peElement.views->first().representation.name/] - [peElement.model.eType.name/]) 
[/template]

[template public additionalMethodsPropertiesForTableComposition(pec : PropertiesEditionComponent, peElement : PropertiesEditionElement)]
[/template]

[template public additionalMethodsForTableComposition(pec : PropertiesEditionComponent, peElement : PropertiesEditionElement)]
[/template]

[template public editFeature(f : EStructuralFeature, peElement : PropertiesEditionElement)]
		// FIXME : define 'editFeature' (from widgetTest.mtl) for case ([peElement.views->first().representation.name/] - [peElement.model.eType.name/]) 
[/template]