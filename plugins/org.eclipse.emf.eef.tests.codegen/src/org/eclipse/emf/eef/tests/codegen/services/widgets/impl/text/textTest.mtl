[comment 
 *******************************************************************************
 * Copyright (c) 2008-2010 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************
 /]
[module textTest('http://www.eclipse.org/emf/eef/components/1.0.0') extends widgetTest/]

[import common /]
[import naming /]
[import typeUtils /]

[template public canGenerateTest(pec : PropertiesEditionComponent, peElement : PropertiesEditionElement) overrides canGenerateTest ? (peElement.isTextString())]true[/template]

[template public updateExpectedModel(pec : PropertiesEditionComponent, peElement : PropertiesEditionElement) overrides updateExpectedModel ? (peElement.isTextString())]
CompoundCommand cc = new CompoundCommand();
		[comment  TODO: Reuse the commandUpdater template but the last parameter of the command creation method must be ... parameterized /]
		cc.append(SetCommand.create(editingDomain, [pec.model.name.toLowerFirst()/], [peElement.metamodelGetter()/], "value2"));
[/template]

[template public editFeature(pec : PropertiesEditionComponent, peElement : PropertiesEditionElement) overrides editFeature ? (peElement.isTextString())]
// Change value of the [peElement.name/] feature of the [pec.model.name/] element 
		bot.editTextFeature(wizardShell, [peElement.views->first().owningViewsRepository().messagesProvider()/].[peElement.views->first().editorKey(peElement.views->first().owningView())/], "value2");
[/template]

[template public editPropertyFeature(pec : PropertiesEditionComponent, peElement : PropertiesEditionElement) overrides editPropertyFeature ? (peElement.isTextString())]
// Change value of the [peElement.name/] feature of the [pec.model.name/] element 
		bot.editPropertyTextFeature(propertiesView, [peElement.views->first().owningViewsRepository().messagesProvider()/].[peElement.views->first().editorKey(peElement.views->first().owningView())/], "value2", bot.selectNode(modelEditor, firstInstanceOf));
[/template]

[query isTextString(peElement : PropertiesEditionElement) : Boolean = 
	if (not peElement.model.oclIsTypeOf(ecore::EAttribute))
	then false
	else peElement.representationName('Text') and peElement.model.oclAsType(ecore::EAttribute).isString()
	endif/]
