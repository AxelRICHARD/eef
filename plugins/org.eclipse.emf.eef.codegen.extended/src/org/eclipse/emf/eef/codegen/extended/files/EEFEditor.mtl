[comment encoding = UTF-8 /]
[module EEFEditor('http://www.eclipse.org/emf/eef/components/1.0.0', 'http://www.eclipse.org/emf/eef/extended/editor/1.0.0')/]

[import org::eclipse::emf::eef::codegen::services::common /]
[import org::eclipse::emf::eef::codegen::services::naming /]
[import org::eclipse::emf::eef::codegen::extended::services::editor-common /]
[import org::eclipse::emf::eef::codegen::extended::editor::api::EditorContribution /]


[template public generateEditor(peContext : PropertiesEditionContext)]
	
	[file (peContext.fullFilePath(), false, 'UTF-8')]
/**
 * <copyright>
 * </copyright>
 *
 * $Id: EEFEditor.mtl,v 1.1 2010/12/23 13:49:11 glefur Exp $
 */
package [peContext.model.presentationPackage()/];


import org.eclipse.emf.eef.runtime.ui.editor.InteractiveEEFEditor;
import org.eclipse.emf.eef.runtime.ui.editors.pages.tree.EEFTreeMDFormPage;
import org.eclipse.jface.viewers.ISelectionChangedListener;
import org.eclipse.jface.viewers.SelectionChangedEvent;
import org.eclipse.swt.widgets.Composite;


/**
 * This is an example of a Demo model editor.
 * @generated
 */
public [model.editorClassName()/] extends InteractiveEEFEditor {

	/**
	 * {@inheritDoc}
	 * @see org.eclipse.emf.eef.runtime.ui.editor.InteractiveEEFEditor#contributePages()
	 */
	protected void contributePages() {
	[for (contribution : EEFEditorContribution | peContext.categories->filter(EEFEditorContributions).bindings->filter(EEFEditorContribution))]
		{
			[contribution.model.editorInput()/]
			[comment TODO : Process filters/]
			[for (page : EEFPage | contribution.views->filter(EEFPage))]
			{	
				[page.editorPage(peContext.model.editorClassName())/]
				page.setInput(input);
			}
			[/for]
		}
	[/for]
	}

}
	[/file]
	
[/template]


[template public fullFilePath(peContext : PropertiesEditionContext)]
[peContext.model.qualifiedEditorClassName().toPath()/].java
[/template]