[comment 
 *******************************************************************************
 * Copyright (c) 2008-2010 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************
 /]
[module richtextSWTImpl('http://www.eclipse.org/emf/eef/views/1.0.0', 'http://www.eclipse.org/emf/eef/components/1.0.0', 'http://www.eclipse.org/emf/2002/Ecore', 'http://www.eclipse.org/emf/eef/generation/1.0.0') extends widgetSWTImpl/]

[import common /]
[import naming /]
[import viewCommon /]
[comment I don't see a better way to get specific swt services for the moment /]
[import widgetSWTImpl /]

[template public manageImports(widget : Widget, pec : PropertiesEditionComponent, view : View, basePackage : String) overrides manageImports ? (widget.name = 'RichText')]
import org.eclipse.epf.richtext.IRichText;
import org.eclipse.epf.richtext.IRichTextToolBar;
import org.eclipse.epf.richtext.RichText;
import org.eclipse.epf.richtext.RichTextToolBar;
import org.eclipse.epf.richtext.actions.AddImageAction;
import org.eclipse.epf.richtext.actions.AddLinkAction;
import org.eclipse.epf.richtext.actions.AddOrderedListAction;
import org.eclipse.epf.richtext.actions.AddTableAction;
import org.eclipse.epf.richtext.actions.AddUnorderedListAction;
import org.eclipse.epf.richtext.actions.BoldAction;
import org.eclipse.epf.richtext.actions.ClearContentAction;
import org.eclipse.epf.richtext.actions.CopyAction;
import org.eclipse.epf.richtext.actions.CutAction;
import org.eclipse.epf.richtext.actions.FindReplaceAction;
import org.eclipse.emf.eef.runtime.ui.widgets.richtext.actions.EEFFontNameAction;
import org.eclipse.emf.eef.runtime.ui.widgets.richtext.actions.EEFFontSizeAction;
import org.eclipse.emf.eef.runtime.ui.widgets.richtext.actions.EEFFontStyleAction;
import org.eclipse.epf.richtext.actions.IndentAction;
import org.eclipse.epf.richtext.actions.ItalicAction;
import org.eclipse.epf.richtext.actions.JustifyCenterAction;
import org.eclipse.epf.richtext.actions.JustifyLeftAction;
import org.eclipse.epf.richtext.actions.JustifyRightAction;
import org.eclipse.epf.richtext.actions.OutdentAction;
import org.eclipse.epf.richtext.actions.PasteAction;
import org.eclipse.epf.richtext.actions.SubscriptAction;
import org.eclipse.epf.richtext.actions.SuperscriptAction;
import org.eclipse.epf.richtext.actions.TidyActionGroup;
import org.eclipse.epf.richtext.actions.UnderlineAction;
[/template]

[template public widgetDeclaration(editor : ElementEditor) overrides widgetDeclaration ? (editor.representation.name = 'RichText')]
	protected EEFRichText [editor.name.toJavaIdentifier()/];
[/template]

[template public implementation(editor : ElementEditor) overrides implementation ? (editor.representation.name = 'RichText')]
create[editor.name.toJavaClassifier()/]RichText(parent);
[/template]

[template public additionalImplementation(editor : ElementEditor, pec : PropertiesEditionComponent, inputPEC: PropertiesEditionComponent) overrides additionalImplementation ? (editor.representation.name = 'RichText')]
	[editor.owningViewsRepository().associatedGenModel().generationComment()/]
	protected Composite create[editor.name.toJavaClassifier()/]RichText(Composite parent) {
		Label [editor.name.toJavaIdentifier()/]Label = SWTUtils.createPartLabel(parent, [editor.owningViewsRepository().messagesProvider()/].[editor.editorKey(editor.owningView())/], propertiesEditionComponent.isRequired([editor.editorID()/], [editor.owningViewsRepository().vrClass()/].SWT_KIND));
		GridData [editor.name.toJavaIdentifier()/]LabelData = new GridData(GridData.FILL_HORIZONTAL);
		[editor.name.toJavaIdentifier()/]LabelData.horizontalSpan = 2;
		[editor.name.toJavaIdentifier()/]Label.setLayoutData([editor.name.toJavaIdentifier()/]LabelData);
		SWTUtils.createHelpButton(parent, propertiesEditionComponent.getHelpContent([editor.editorID()/], [editor.owningViewsRepository().vrClass()/].SWT_KIND), null); //$NON-NLS-1$
		Composite toolbarContainer = new Composite(parent, SWT.NONE);
		toolbarContainer.setLayout(new GridLayout(2, false));
		GridData toolbarData = new GridData(GridData.FILL_HORIZONTAL);
		toolbarData.horizontalSpan = 3;
		toolbarContainer.setLayoutData(toolbarData);
		RichTextToolBar toolBar = new RichTextToolBar(toolbarContainer, SWT.NONE, [editor.name.toJavaIdentifier()/]);
		[editor.name.toJavaIdentifier()/] = new EEFRichText(parent, SWT.BORDER | SWT.WRAP | SWT.MULTI | SWT.V_SCROLL); //$NON-NLS-1$
		[editor.name.toJavaIdentifier()/].setEditable(true);
		[if (editor.readOnly)]
		[editor.name.toJavaIdentifier()/].setEnabled(false);
		[editor.name.toJavaIdentifier()/].setToolTipText([editor.owningViewsRepository().messagesProvider()/].[editor.owningViewString()/]_ReadOnly);
		[/if]
		GridData [editor.name.toJavaIdentifier()/]Data = new GridData(GridData.FILL_HORIZONTAL);
		[editor.name.toJavaIdentifier()/]Data.horizontalSpan = 3;
		[editor.name.toJavaIdentifier()/]Data.heightHint = 200;
		[editor.name.toJavaIdentifier()/]Data.widthHint = 200;
		[editor.name.toJavaIdentifier()/].setLayoutData([editor.name.toJavaIdentifier()/]Data);

		[editor.name.toJavaIdentifier()/].addModifyListener(new ModifyListener() {
			public void modifyText(ModifyEvent e) {
				propertiesEditionComponent.delayedFirePropertiesChanged(new PropertiesEditionEvent([editor.editionPart()/].this, [editorID(editor)/], PropertiesEditionEvent.COMMIT, PropertiesEditionEvent.SET, null, [editor.name.toJavaIdentifier()/].getText()));
			}
		});

		fillToolBar(toolBar, [editor.name.toJavaIdentifier()/]);
		return parent;
	}

	/**
     * Populate actions in the Toolbar to link with the RichText
     * 
     * @param toolBar The IRichTextToolBar
     * @param richText The IRichText
     */
    private void fillToolBar(IRichTextToolBar toolBar, IRichText richText)
    {
		[editor.fillToolBar()/]
	}
[/template]

[template public fillToolBar (editor : ElementEditor) ]
        toolBar.addAction(new EEFFontStyleAction(richText));
        toolBar.addAction(new EEFFontNameAction(richText));
        toolBar.addAction(new EEFFontSizeAction(richText));
        toolBar.addSeparator();
        toolBar.addAction(new CutAction(richText));
        toolBar.addAction(new CopyAction(richText));
        toolBar.addAction(new PasteAction(richText));
        toolBar.addSeparator();
        toolBar.addAction(new ClearContentAction(richText));
        toolBar.addSeparator();
        toolBar.addAction(new BoldAction(richText));
        toolBar.addAction(new ItalicAction(richText));
        toolBar.addAction(new UnderlineAction(richText));
        toolBar.addSeparator();
        toolBar.addAction(new SubscriptAction(richText));
        toolBar.addAction(new SuperscriptAction(richText));
        toolBar.addSeparator();
        toolBar.addAction(new TidyActionGroup(richText));
        toolBar.addSeparator();
        toolBar.addAction(new AddOrderedListAction(richText));
        toolBar.addAction(new AddUnorderedListAction(richText));
        toolBar.addSeparator();
        toolBar.addAction(new OutdentAction(richText));
        toolBar.addAction(new IndentAction(richText));
        toolBar.addSeparator();
        toolBar.addAction(new JustifyLeftAction(richText));
        toolBar.addAction(new JustifyCenterAction(richText));
        toolBar.addAction(new JustifyRightAction(richText));
        toolBar.addSeparator();
        toolBar.addAction(new FindReplaceAction(richText)
        {
            /**
             * @see org.eclipse.epf.richtext.actions.FindReplaceAction#execute(org.eclipse.epf.richtext.IRichText)
             */
            public void execute(IRichText rText)
            {
                rText.getFindReplaceAction().execute(rText);
            }
        });
        toolBar.addSeparator();
        toolBar.addAction(new AddLinkAction(richText));
        toolBar.addAction(new AddImageAction(richText));
        toolBar.addSeparator();
        toolBar.addAction(new AddTableAction(richText));

[/template]

