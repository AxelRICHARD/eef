[comment 
 *******************************************************************************
 * Copyright (c) 2008-2009 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************
 /]
[module plugin_xml('http://www.eclipse.org/emf/eef/components/1.0.0', 'http://www.eclipse.org/emf/eef/views/1.0.0', 'http://www.eclipse.org/emf/2002/Ecore', 'http://www.eclipse.org/emf/2002/GenModel')/]

[import common /]
[import naming /]

[template public plugin_xml(editionContext : PropertiesEditionContext, basePackage : String)]
[comment @main /]
	[file (editionContext.model.ecorePackage.name.concat('_properties.plugin.xml'), false)]
<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>

 <plugin>

  <!-- EEF extensions -->
  [for (ePackage : EPackage | editionContext.model.ecorePackage.eAllContents(EPackage)->including(editionContext.model.ecorePackage))]
   <extension point="org.eclipse.emf.edit.itemProviderAdapterFactories">
      <factory
            uri="[ePackage.nsURI/]"
            class="[editionContext.providersPackage()/].[ePackage.pecPackageProviderClass()/]"
            supportedTypes="org.eclipse.emf.eef.runtime.providers.PropertiesEditingProvider"/>
   </extension>
  [/for]
[for (repository : ViewsRepository | ViewsRepository.allInstances())]
   <extension
         point="org.eclipse.emf.eef.runtime.PropertiesEditionPartProvider">
      <PropertiesEditionPartProvider
            providerClass="[repository.pepQualifiedProvider()/]">
      </PropertiesEditionPartProvider>
   </extension>
[/for]

   <!-- Tabbed properties views extension -->
   <extension
         point="org.eclipse.ui.views.properties.tabbed.propertyContributor">
      <propertyContributor
            contributorId="[editionContext.contributorID(basePackage).trim()/]">
         <propertyCategory
               category="default">
         </propertyCategory>
         <propertyCategory
               category="extended">
         </propertyCategory>
         <propertyCategory
               category="advanced">
         </propertyCategory>
      </propertyContributor>
   </extension>
   <extension
         point="org.eclipse.ui.views.properties.tabbed.propertyTabs">
      <propertyTabs
            contributorId="[editionContext.contributorID(basePackage).trim()/]">
         <propertyTab
               label="Base"
               category="default"
               id="Base">
         </propertyTab>
[for (pec : PropertiesEditionComponent | editionContext.eAllContents(PropertiesEditionComponent).oclAsType(PropertiesEditionComponent))]
[for (view : View | pec.involvedViews()->asOrderedSet())][if (view.viewKey(pec) <> 'Base')]
[editionContext.propertyTab(basePackage, view, pec)/]
[/if][/for]
[/for]
      </propertyTabs>
   </extension>
   <extension
         point="org.eclipse.ui.views.properties.tabbed.propertySections">
      <propertySections
            contributorId="[editionContext.contributorID(basePackage).trim()/]">
[for (pec : PropertiesEditionComponent | editionContext.eAllContents(PropertiesEditionComponent).oclAsType(PropertiesEditionComponent)) ? (pec.explicit)]
[for (view : View | pec.involvedViews()->asOrderedSet())]
         <propertySection
               class="org.eclipse.emf.eef.runtime.ui.properties.sections.PropertiesEditionSection"
               id="[pec.model.eefPackage(basePackage)/].section.[pec.model.name/]"
               tab="[view.viewKey(pec).toASCII()/]">
             <input
                    type="[pec.model.qualifiedName(basePackage)/]">
             </input>
         </propertySection>
[/for]
[/for]
      </propertySections>
   </extension>
 </plugin>
[/file]
[/template]
[template public propertyTab(editionContext : PropertiesEditionContext, basePackage : String, view : View, pec : PropertiesEditionComponent)]
         <propertyTab
               label="[view.viewKey(pec)/]"
               category="extended"
               id="[view.viewKey(pec).toASCII()/]"
[if (pec.involvedViews()->indexOf(view) = 2)]
               afterTab="Base">
[else]
               afterTab="[pec.previousView(view).name.toASCII()/]">
[/if]
         </propertyTab>
[/template]

[template public labelProvider(editionContext : PropertiesEditionContext)]
org.eclipse.gmf.runtime.common.ui.services.util.CommonLabelProvider
[/template]

[query public previousView(pec : PropertiesEditionComponent, view : View) : View = 
	pec.involvedViews()->at(pec.involvedViews()->indexOf(view)).oclAsType(View)/]
