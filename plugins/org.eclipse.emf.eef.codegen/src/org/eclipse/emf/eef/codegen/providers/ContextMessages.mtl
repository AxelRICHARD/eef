[comment 
 *******************************************************************************
 * Copyright (c) 2008-2009 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************
 /]
[module ContextMessages('http://www.eclipse.org/emf/eef/components/1.0.0', 'http://www.eclipse.org/emf/2002/Ecore', 'http://www.eclipse.org/emf/eef/views/1.0.0', 'http://www.eclipse.org/emf/eef/generation/1.0.0')/]

[import common /]
[import naming /]

[template public ContextMessages(viewsRepository : ViewsRepository)]
[comment @main /]
	[file (viewsRepository.fullFilePath(), false)]
[viewsRepository.associatedGenModel().licenceText().trim()/]
package [viewsRepository.messagesProviderPackage()/];

import org.eclipse.osgi.util.NLS;

/**
 * [viewsRepository.associatedGenModel().authorText().trim()/]
 */
public class [viewsRepository.messagesProvider()/] extends NLS {
	private static final String BUNDLE_NAME = "[viewsRepository.messagesProviderPackage()/].[viewsRepository.messagesProperties()/]"; //$NON-NLS-1$

[for (group : ViewElement | viewsRepository.eAllContents(views::Container)) ? (group.representation.name = 'Group')]
	public static String [group.groupKey(group.owningView())/];

[/for]
[for (view : View | viewsRepository.eAllContents(views::View))]
	public static String [view.name.toJavaClassifier()/]_ReadOnly;

	public static String [view.name.toJavaClassifier()/]_Part_Title;

[/for]
[for (editor : ElementEditor | viewsRepository.eAllContents(views::ElementEditor))]
	public static String [editor.editorKey(editor.owningView())/];

[/for]
	public static String PropertiesEditionPart_DocumentationLabel;

	public static String PropertiesEditionPart_IntegerValueMessage;

	public static String PropertiesEditionPart_FloatValueMessage;

	public static String PropertiesEditionPart_ShortValueMessage;

	public static String PropertiesEditionPart_LongValueMessage;

	public static String PropertiesEditionPart_ByteValueMessage;

	public static String PropertiesEditionPart_BigIntegerValueMessage;

	public static String PropertiesEditionPart_BigDecimalValueMessage;

	public static String PropertiesEditionPart_DoubleValueMessage;

	public static String PropertiesEditionPart_PropertiesGroupLabel;

	public static String PropertiesEditionPart_RequiredFeatureMessage;

	public static String PropertiesEditionPart_AddTableViewerLabel;

	public static String PropertiesEditionPart_EditTableViewerLabel;

	public static String PropertiesEditionPart_RemoveTableViewerLabel;

	public static String PropertiesEditionPart_AddListViewerLabel;

	public static String PropertiesEditionPart_RemoveListViewerLabel;

	// [protected ('for additionnal NLS Constants')]
	
	// [/protected]

	static {
		// initialize resource bundle
		NLS.initializeMessages(BUNDLE_NAME, [viewsRepository.messagesProvider()/].class);
	}

	private [viewsRepository.messagesProvider()/]() {
		//protect instanciation
	}
}
[/file]
[/template]

[template public fullFilePath(viewsRepository : ViewsRepository)]
[viewsRepository.messagesProviderPackage().toPath()/]/[viewsRepository.messagesProvider()/].java
[/template]

