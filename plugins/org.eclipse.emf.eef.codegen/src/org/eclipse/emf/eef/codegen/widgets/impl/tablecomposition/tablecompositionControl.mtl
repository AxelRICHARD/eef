[comment 
 *******************************************************************************
 * Copyright (c) 2008-2009 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************
 /]
[module tablecompositionControl('http://www.eclipse.org/emf/2002/Ecore', 'http://www.eclipse.org/emf/eef/components/1.0.0', 'http://www.eclipse.org/emf/eef/views/1.0.0', 'http://www.eclipse.org/emf/eef/mapping/1.0.0', 'http://www.eclipse.org/emf/eef/generation/1.0.0') extends widgetControl/]

[import naming /]
[import common /]
[import typeUtils /]
[import filters /]

[comment ===== Case : model = Containment(*) - view = TableComposition or AdvancedTableComposition===== /]
[query public validCaseForSimpleReference(editionElement : PropertiesEditionElement) : Boolean = 
	not editionElement.hasModelNavigation() 
	and editionElement.model.isContainmentMany() 
	and (editionElement.representationName('TableComposition') or editionElement.representationName('AdvancedTableComposition')) /]

[template public additionalComponentField(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides additionalComponentField ? (editionElement.validCaseForSimpleReference())]

/**
 * Settings for [editionElement.name/] ReferencesTable
 */
protected ReferencesTableSettings [editionElement.name.toJavaIdentifier()/]Settings;

[/template]

[template public declareEObjectUpdater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides declareEObjectUpdater ? (editionElement.validCaseForSimpleReference())]
if (event.getKind() == PropertiesEditionEvent.ADD) {
	[if (editionElement.model.eType.oclIsTypeOf(ecore::EClass))]
		[if (not editionElement.model.eType.oclAsType(ecore::EClass).abstract)]
			[if (editionElement.strictFilterType().oclIsUndefined())]
	EReferencePropertiesEditionContext context = new EReferencePropertiesEditionContext(editingContext, this, [editionElement.name.toJavaIdentifier()/]Settings, editingContext.getAdapterFactory());
			[else]
	EReferencePropertiesEditionContext context = new TypedEReferencePropertiesEditingContext(editingContext, this, [editionElement.name.toJavaIdentifier()/]Settings, [editionElement.strictFilterType().metamodelGetter()/], editingContext.getAdapterFactory());
			[/if]
	PropertiesEditingProvider provider = (PropertiesEditingProvider)editingContext.getAdapterFactory().adapt(semanticObject, PropertiesEditingProvider.class);
	if (provider != null) {
		PropertiesEditingPolicy policy = provider.getPolicy(context);
		if (policy instanceof CreateEditingPolicy) {
			policy.execute();
		}
	}
		[else]
			[if (editionElement.strictFilterType().oclIsUndefined())]
	EReferencePropertiesEditionContext context = new EReferencePropertiesEditionContext(editingContext, this, [editionElement.name.toJavaIdentifier()/]Settings, editingContext.getAdapterFactory());
			[else]
	EReferencePropertiesEditionContext context = new TypedEReferencePropertiesEditingContext(editingContext, this, [editionElement.name.toJavaIdentifier()/]Settings, [editionElement.strictFilterType().metamodelGetter()/], editingContext.getAdapterFactory());
			[/if]
	PropertiesEditingProvider provider = (PropertiesEditingProvider)editingContext.getAdapterFactory().adapt(semanticObject, PropertiesEditingProvider.class);
	if (provider != null) {
		PropertiesEditingPolicy policy = provider.getPolicy(context);
		if (policy instanceof CreateEditingPolicy) {
			policy.execute();
		}
	}
		[/if]
	[/if]
} else if (event.getKind() == PropertiesEditionEvent.EDIT) {
	EObjectPropertiesEditionContext context = new EObjectPropertiesEditionContext(editingContext, this, (EObject) event.getNewValue(), editingContext.getAdapterFactory());
	PropertiesEditingProvider provider = (PropertiesEditingProvider)editingContext.getAdapterFactory().adapt((EObject) event.getNewValue(), PropertiesEditingProvider.class);
	if (provider != null) {
		PropertiesEditingPolicy editionPolicy = provider.getPolicy(context);
		if (editionPolicy != null) {
			editionPolicy.execute();
		}
	}
} else if (event.getKind() == PropertiesEditionEvent.REMOVE) {
		[editionElement.name.toJavaIdentifier()/]Settings.removeFromReference((EObject) event.getNewValue());
}
[/template]


[template public liveUpdater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides liveUpdater ? (editionElement.validCaseForSimpleReference())]
if ([editionElement.metamodelGetter()/].equals(msg.getFeature()) && isAccessible([editionElement.views->first().editorID()/]))
	[view.viewIdentifier(pec)/].update[editionElement.views->first().viewPackageSignature()/]();
[/template]


[template public updater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides updater ? (editionElement.validCaseForSimpleReference())]
if (isAccessible([editionElement.views->first().editorID()/])) {
	[editionElement.name.toJavaIdentifier()/]Settings = new ReferencesTableSettings([pec.model.name.toJavaIdentifier()/], [editionElement.metamodelGetter()/]);
	[view.viewIdentifier(pec)/].init[editionElement.views->first().viewPackageSignature()/]([editionElement.name.toJavaIdentifier()/]Settings);
}
[/template]

[template public filterUpdater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides filterUpdater ? (editionElement.validCaseForSimpleReference())]
[view.viewIdentifier(pec)/].addFilterTo[editionElement.views->first().viewPackageSignature()/](new ViewerFilter() {

		/**
		 * {@inheritDoc}
		 * 
		 * @see org.eclipse.jface.viewers.ViewerFilter#select(org.eclipse.jface.viewers.Viewer, java.lang.Object, java.lang.Object)
		 */
		public boolean select(Viewer viewer, Object parentElement, Object element) {
			return [if (editionElement.model.lowerBound = 0)](element instanceof String && element.equals("")) || [/if](element instanceof [if (editionElement.strictFilterType().oclIsUndefined())][editionElement.model.eType.name/][else][editionElement.strictFilterType().name/][/if]);[if (editionElement.model.lowerBound = 0)] //$NON-NLS-1$ [/if]
		}

});
[for (filter : BindingFilter | editionElement.bindingFilters)]
[filter.filterBody(editionElement,view,pec)/]
[/for]
[if (not editionElement.element.eContainer(components::PropertiesEditionContext).oclAsType(components::PropertiesEditionContext).associatedGenModel().useJMergeForUserCode)]
// [protected ('for additional businessfilters for '.concat(editionElement.name))]

// [/protected]
[/if]
[/template]

[comment ===== Case : model = Containment(*) in Simple Navigation - view = TableComposition or AdvancedTableComposition===== /]
[query public validCaseForMultipleModelReference(editionElement : PropertiesEditionElement) : Boolean = 
	editionElement.hasModelNavigation() 
	and editionElement.navigation.oclAsType(mapping::navigation::SimpleModelNavigation).feature.isContainmentSingle() and editionElement.model.isContainmentMany() 
	and (editionElement.representationName('TableComposition') or editionElement.representationName('AdvancedTableComposition'))
	/]

[template public additionalComponentField(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides additionalComponentField ? (editionElement.validCaseForMultipleModelReference())]

/**
 * Settings for [editionElement.name/] ReferencesTable
 */
protected ReferencesTableSettings [editionElement.name.toJavaIdentifier()/]Settings;

[/template]

[template public declareEObjectUpdater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides declareEObjectUpdater ? (editionElement.validCaseForMultipleModelReference())]
if (event.getKind() == PropertiesEditionEvent.ADD) {
	[if (editionElement.model.eType.oclIsTypeOf(ecore::EClass))]
		[if (not editionElement.model.eType.oclAsType(ecore::EClass).abstract)]
			[if (editionElement.strictFilterType().oclIsUndefined())]
	EReferencePropertiesEditionContext context = new EReferencePropertiesEditionContext(editingContext, this, [editionElement.name.toJavaIdentifier()/]Settings, editingContext.getAdapterFactory());
			[else]
	EReferencePropertiesEditionContext context = new TypedEReferencePropertiesEditingContext(editingContext, this, [editionElement.name.toJavaIdentifier()/]Settings, [editionElement.strictFilterType().metamodelGetter()/], editingContext.getAdapterFactory());
			[/if]
	PropertiesEditingProvider provider = (PropertiesEditingProvider)editingContext.getAdapterFactory().adapt(semanticObject, PropertiesEditingProvider.class);
	if (provider != null) {
		PropertiesEditingPolicy policy = provider.getPolicy(context);
		if (policy instanceof CreateEditingPolicy) {
			policy.execute();
		}
	}
		[else]
			[if (editionElement.strictFilterType().oclIsUndefined())]
	EReferencePropertiesEditionContext context = new EReferencePropertiesEditionContext(editingContext, this, [editionElement.name.toJavaIdentifier()/]Settings, editingContext.getAdapterFactory());
			[else]
	EReferencePropertiesEditionContext context = new TypedEReferencePropertiesEditingContext(editingContext, this, [editionElement.name.toJavaIdentifier()/]Settings, [editionElement.strictFilterType().metamodelGetter()/], editingContext.getAdapterFactory());
			[/if]
	PropertiesEditingProvider provider = (PropertiesEditingProvider)editingContext.getAdapterFactory().adapt(semanticObject, PropertiesEditingProvider.class);
	if (provider != null) {
		PropertiesEditingPolicy policy = provider.getPolicy(context);
		if (policy instanceof CreateEditingPolicy) {
			policy.execute();
		}
	}
		[/if]
	[/if]
} else if (event.getKind() == PropertiesEditionEvent.EDIT) {
	EObjectPropertiesEditionContext context = new EObjectPropertiesEditionContext(editingContext, this, (EObject) event.getNewValue(), editingContext.getAdapterFactory());
	PropertiesEditingProvider provider = (PropertiesEditingProvider)editingContext.getAdapterFactory().adapt((EObject) event.getNewValue(), PropertiesEditingProvider.class);
	if (provider != null) {
		PropertiesEditingPolicy editionPolicy = provider.getPolicy(context);
		if (editionPolicy != null) {
			editionPolicy.execute();
		}
	}
} else if (event.getKind() == PropertiesEditionEvent.REMOVE) {
		[editionElement.name.toJavaIdentifier()/]Settings.removeFromReference((EObject) event.getNewValue());
}
[/template]

[template public liveUpdater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides liveUpdater ? (editionElement.validCaseForMultipleModelReference())]
if ([editionElement.name.toJavaIdentifier()/]Settings.isAffectingFeature((EStructuralFeature)msg.getFeature()) && isAccessible([editionElement.views->first().editorID()/]))
	[view.viewIdentifier(pec)/].update[editionElement.views->first().viewPackageSignature()/]();
[/template]

[template public updater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides updater ? (editionElement.validCaseForMultipleModelReference())]
if (isAccessible([editionElement.views->first().editorID()/])) {
	[editionElement.name.toJavaIdentifier()/]Settings = new ReferencesTableSettings([pec.model.name.toJavaIdentifier()/], [editionElement.navigation.oclAsType(mapping::navigation::SimpleModelNavigation).metamodelGetter()/], [editionElement.metamodelGetter()/]);
	[view.viewIdentifier(pec)/].init[editionElement.views->first().viewPackageSignature()/]([editionElement.name.toJavaIdentifier()/]Settings);
}
[/template]

[template public filterUpdater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides filterUpdater ? (editionElement.validCaseForMultipleModelReference())]
[view.viewIdentifier(pec)/].addFilterTo[editionElement.views->first().viewPackageSignature()/](new ViewerFilter() {

		/**
		 * {@inheritDoc}
		 * 
		 * @see org.eclipse.jface.viewers.ViewerFilter#select(org.eclipse.jface.viewers.Viewer, java.lang.Object, java.lang.Object)
		 */
		public boolean select(Viewer viewer, Object parentElement, Object element) {
			[if (editionElement.model.lowerBound = 0)]if (element instanceof String)
				return element.equals(""); //$NON-NLS-1$ 
			[/if]
			if (element instanceof [editionElement.model.eType.name/])
				return true;
			return element instanceof Resource;
		}

});
[for (filter : BindingFilter | editionElement.bindingFilters)]
[filter.filterBody(editionElement,view,pec)/]
[/for]
[if (not editionElement.element.eContainer(components::PropertiesEditionContext).oclAsType(components::PropertiesEditionContext).associatedGenModel().useJMergeForUserCode)]
// [protected ('for additional businessfilters for '.concat(editionElement.name))]

// [/protected]
[/if]
[/template]

[comment ===== Case : model = Containment(1) - view = TableComposition or AdvancedTableComposition===== /]
[query public validCaseForSingleModelReference(editionElement : PropertiesEditionElement) : Boolean = 
	editionElement.hasModelNavigation() 
	and editionElement.navigation.oclAsType(mapping::navigation::SimpleModelNavigation).feature.isContainmentMany() and editionElement.model.isContainmentSingle() 
	and (editionElement.representationName('TableComposition') or editionElement.representationName('AdvancedTableComposition'))/]

[template public additionalComponentField(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides additionalComponentField ? (editionElement.validCaseForSingleModelReference())]

/**
 * Settings for [editionElement.name/] ReferencesTable
 */
protected ReferencesTableSettings [editionElement.name.toJavaIdentifier()/]Settings;

[/template]

[template public declareEObjectUpdater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides declareEObjectUpdater ? (editionElement.validCaseForSingleModelReference())]
if (event.getKind() == PropertiesEditionEvent.ADD) {
	[if (editionElement.model.eType.oclIsTypeOf(ecore::EClass))]
		[if (not editionElement.model.eType.oclAsType(ecore::EClass).abstract)]
			[if (editionElement.strictFilterType().oclIsUndefined())]
	EReferencePropertiesEditionContext context = new EReferencePropertiesEditionContext(editingContext, this, [editionElement.name.toJavaIdentifier()/]Settings, editingContext.getAdapterFactory());
			[else]
	EReferencePropertiesEditionContext context = new TypedEReferencePropertiesEditingContext(editingContext, this, [editionElement.name.toJavaIdentifier()/]Settings, [editionElement.strictFilterType().metamodelGetter()/], editingContext.getAdapterFactory());
			[/if]
	PropertiesEditingProvider provider = (PropertiesEditingProvider)editingContext.getAdapterFactory().adapt(semanticObject, PropertiesEditingProvider.class);
	if (provider != null) {
		PropertiesEditingPolicy policy = provider.getPolicy(context);
		if (policy instanceof CreateEditingPolicy) {
			policy.execute();
		}
	}
		[else]
			[if (editionElement.strictFilterType().oclIsUndefined())]
	EReferencePropertiesEditionContext context = new EReferencePropertiesEditionContext(editingContext, this, [editionElement.name.toJavaIdentifier()/]Settings, editingContext.getAdapterFactory());
			[else]
	EReferencePropertiesEditionContext context = new TypedEReferencePropertiesEditingContext(editingContext, this, [editionElement.name.toJavaIdentifier()/]Settings, [editionElement.strictFilterType().metamodelGetter()/], editingContext.getAdapterFactory());
			[/if]
	PropertiesEditingProvider provider = (PropertiesEditingProvider)editingContext.getAdapterFactory().adapt(semanticObject, PropertiesEditingProvider.class);
	if (provider != null) {
		PropertiesEditingPolicy policy = provider.getPolicy(context);
		if (policy instanceof CreateEditingPolicy) {
			policy.execute();
		}
	}
		[/if]
	[/if]
} else if (event.getKind() == PropertiesEditionEvent.EDIT) {
	EObjectPropertiesEditionContext context = new EObjectPropertiesEditionContext(editingContext, this, (EObject) event.getNewValue(), editingContext.getAdapterFactory());
	PropertiesEditingProvider provider = (PropertiesEditingProvider)editingContext.getAdapterFactory().adapt((EObject) event.getNewValue(), PropertiesEditingProvider.class);
	if (provider != null) {
		PropertiesEditingPolicy editionPolicy = provider.getPolicy(context);
		if (editionPolicy != null) {
			editionPolicy.execute();
		}
	}
} else if (event.getKind() == PropertiesEditionEvent.REMOVE) {
	[editionElement.name.toJavaIdentifier()/]Settings.removeFromReference((EObject) event.getNewValue());
}
[/template]

[template public liveUpdater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides liveUpdater ? (editionElement.validCaseForSingleModelReference())]
if ([editionElement.name.toJavaIdentifier()/]Settings.isAffectingFeature((EStructuralFeature)msg.getFeature()) && isAccessible([editionElement.views->first().editorID()/]))
	[view.viewIdentifier(pec)/].update[editionElement.views->first().viewPackageSignature()/]();
[/template]

[template public updater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides updater ? (editionElement.validCaseForSingleModelReference())]
if (isAccessible([editionElement.views->first().editorID()/])) {
	[editionElement.name.toJavaIdentifier()/]Settings = new ReferencesTableSettings([pec.model.name.toJavaIdentifier()/], [editionElement.navigation.oclAsType(mapping::navigation::SimpleModelNavigation).metamodelGetter()/], [editionElement.metamodelGetter()/]);
	[view.viewIdentifier(pec)/].init[editionElement.views->first().viewPackageSignature()/]([editionElement.name.toJavaIdentifier()/]Settings);
}
[/template]

[template public filterUpdater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides filterUpdater ? (editionElement.validCaseForSingleModelReference())]
[view.viewIdentifier(pec)/].addFilterTo[editionElement.views->first().viewPackageSignature()/](new ViewerFilter() {

		/**
		 * {@inheritDoc}
		 *
		 * @see org.eclipse.jface.viewers.ViewerFilter#select(org.eclipse.jface.viewers.Viewer, java.lang.Object, java.lang.Object)
		 */
		public boolean select(Viewer viewer, Object parentElement, Object element) {
			return [if (editionElement.model.lowerBound = 0)](element instanceof String && element.equals("")) || [/if](element instanceof [if (editionElement.strictFilterType().oclIsUndefined())][editionElement.model.eType.name/][else][editionElement.strictFilterType().name/][/if]);[if (editionElement.model.lowerBound = 0)] //$NON-NLS-1$ [/if]
		}

});
[for (filter : BindingFilter | editionElement.bindingFilters)]
[filter.filterBody(editionElement,view,pec)/]
[/for]
[if (not editionElement.element.eContainer(components::PropertiesEditionContext).oclAsType(components::PropertiesEditionContext).associatedGenModel().useJMergeForUserCode)]
// [protected ('for additional businessfilters for '.concat(editionElement.name))]

// [/protected]
[/if]
[/template]

[query public strictFilterType(editingElement : PropertiesEditionElement) : EClassifier = 
	if (editingElement.bindingFilters->filter(StrictTypingFilter)->size() > 0) 
	then editingElement.bindingFilters->filter(StrictTypingFilter)->first().type
	else null
	endif /]
