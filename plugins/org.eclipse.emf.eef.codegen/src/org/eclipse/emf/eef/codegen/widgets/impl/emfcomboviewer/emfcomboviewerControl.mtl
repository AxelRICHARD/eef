[comment 
 *******************************************************************************
 * Copyright (c) 2008-2009 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************
 /]
[module emfcomboviewerControl('http://www.eclipse.org/emf/2002/Ecore', 'http://www.eclipse.org/emf/eef/components/1.0.0', 'http://www.eclipse.org/emf/eef/views/1.0.0', 'http://www.eclipse.org/emf/eef/mapping/1.0.0') extends widgetControl/]

[import org::eclipse::emf::eef::codegen::services::naming /]
[import org::eclipse::emf::eef::codegen::services::common /]
[import org::eclipse::emf::eef::codegen::services::typeUtils /]
[import org::eclipse::emf::eef::codegen::services::imports /]

[comment ===== Case : model = Attribute(1) - view = EMFComboViewer ===== /]
[template public declareEObjectUpdater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides declareEObjectUpdater ? (editionElement.model.isAttributeSingle() and editionElement.representationName('EMFComboViewer') and not editionElement.canGeneratemodelNavigation())]
[pec.model.name.toJavaIdentifier().disambiguation('event')/].set[editionElement.model.name.toUpperFirst()/](([if editionElement.model.eType.instanceTypeName.oclIsUndefined()][include(editionElementQualifiedClass())/][else][editionElement.model.eType.instanceTypeName/][/if])event.getNewValue());
[/template]

[template public liveUpdater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides liveUpdater ? (editionElement.model.isAttributeSingle() and editionElement.representationName('EMFComboViewer'))]
[if (editionElement.model.oclAsType(EAttribute).isEnum())]
if ([editionElement.metamodelGetter()/].equals(msg.getFeature()) && isAccessible([editionElement.views->first().editorID()/]))
	[view.viewIdentifier(pec)/].[editionElement.views->first().viewPackageSetter()/](([if editionElement.model.eType.instanceTypeName.oclIsUndefined()][include(editionElement.editionElementQualifiedClass())/][else][editionElement.model.eType.instanceTypeName/][/if])msg.getNewValue());
[else]
//FIXME invalid case in liveUpdater(), Case : model = Attribute(1) : [editionElement.model.name/] - view = EMFComboViewer
[/if]
[/template]

[template public updater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides updater ? (editionElement.model.isAttributeSingle() and editionElement.representationName('EMFComboViewer') and not editionElement.canGeneratemodelNavigation())]
if (isAccessible([editionElement.views->first().editorID()/])) {
	[view.viewIdentifier(pec)/].init[editionElement.views->first().viewPackageSignature()/](([include('org.eclipse.emf.ecore.EEnum')/]) [editionElement.metamodelGetter()/].getEType(), [pec.model.name.toJavaIdentifier()/].get[editionElement.model.name.toUpperFirst()/]());
}
[/template]

[template public filterUpdater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides filterUpdater ? (editionElement.model.isAttributeSingle() and editionElement.representationName('EMFComboViewer'))]
[comment no filters for emfcomboviewer /]
[/template]

[comment ===== Case : model = Attribute(1) - view = EMFComboViewer - ModelNavigation ===== /]

[template public declareEObjectUpdater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides declareEObjectUpdater ? (editionElement.model.isAttributeSingle() and editionElement.representationName('EMFComboViewer') and editionElement.canGeneratemodelNavigation())]
[editionElement.name.toJavaIdentifier()/]Settings.setValue(([if editionElement.model.eType.instanceTypeName.oclIsUndefined()][include(editionElementQualifiedClass())/][else][editionElement.model.eType.instanceTypeName/][/if])event.getNewValue());
[/template]

[template public updater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides updater ? (editionElement.model.isAttributeSingle() and editionElement.representationName('EMFComboViewer') and editionElement.canGeneratemodelNavigation())]
if (isAccessible([editionElement.views->first().editorID()/])) {
	[view.viewIdentifier(pec)/].init[editionElement.views->first().viewPackageSignature()/](([include('org.eclipse.emf.ecore.EEnum')/]) [editionElement.metamodelGetter()/].getEType(), ([editionElement.views->first().toJavaType().trim()/])[editionElement.name.toJavaIdentifier()/]Settings.getValue());
}
[/template]
