[comment 
 *******************************************************************************
 * Copyright (c) 2008-2009 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************
 /]
[module referencetableGettersSetters('http://www.eclipse.org/emf/eef/views/1.0.0') extends widgetGettersSetters/]

[import common/]
[import naming/]
[import widgetGettersSetters /]


[template public getterDeclaration(elementEditor : ElementEditor) overrides getterDeclaration ? (elementEditor.representationName('ReferencesTable') or elementEditor.representationName('AdvancedReferencesTable'))]
[/template]

[template public getterImplementation(elementEditor : ElementEditor, fullInterfacePath : String) overrides getterImplementation ? (elementEditor.representationName('ReferencesTable') or elementEditor.representationName('AdvancedReferencesTable'))]
[/template]


[template public setterDeclaration(elementEditor : ElementEditor) overrides setterDeclaration ? (elementEditor.representationName('ReferencesTable') or elementEditor.representationName('AdvancedReferencesTable'))]
[elementEditor.initSignatureDocumentation()/]
[elementEditor.initSignature()/];

[elementEditor.updateSignatureDocumentation()/]
[elementEditor.updateSignature()/];

[elementEditor.addFilterSignatureDocumentation()/]
[elementEditor.addFilterSignature()/];

[elementEditor.addBusinessFilterSignatureDocumentation()/]
[elementEditor.addBusinessFilterSignature()/];

[elementEditor.isContainedInTableSignatureDocumentation()/]
[elementEditor.isContainedInTableSignature()/];
[/template]

[template public initSignature(elementEditor : ElementEditor) overrides initSignature ? (elementEditor.representationName('ReferencesTable') or elementEditor.representationName('AdvancedReferencesTable'))]
	public void init[elementEditor.viewPackageSignature()/](ReferencesTableSettings settings)
[/template]

[template public initSignatureDocumentation(elementEditor : ElementEditor) overrides initSignatureDocumentation ? (elementEditor.representationName('ReferencesTable') or elementEditor.representationName('AdvancedReferencesTable'))]
	/**
	 * Init the [elementEditor.name/]
	 * @param settings settings for the [elementEditor.name/] ReferencesTable 
	 */
[/template]


[template public setterImplementation(elementEditor : ElementEditor, fullInterfacePath : String) overrides setterImplementation ? (elementEditor.representationName('ReferencesTable') or elementEditor.representationName('AdvancedReferencesTable'))]
[initSignatureDocumentationImplementation(elementEditor, fullInterfacePath)/]
[elementEditor.initSignatureImplementation()/]

[updateSignatureDocumentationImplementation(elementEditor, fullInterfacePath)/]
[elementEditor.updateSignatureImplementation()/]

[addFilterSignatureDocumentationImplementation(elementEditor, fullInterfacePath)/]
[elementEditor.addFilterSignatureImplementation()/]

[addBusinessFilterSignatureDocumentationImplementation(elementEditor, fullInterfacePath)/]
[elementEditor.addBusinessFilterSignatureImplementation()/]

[isContainedInTableSignatureDocumentationImplementation(elementEditor, fullInterfacePath)/]
[elementEditor.isContainedInTableSignatureImplementation()/]
[/template]

[template public setterImplementationDelegate(elementEditor : ElementEditor, fullInterfacePath : String, referencedView : View) overrides setterImplementationDelegate ? (elementEditor.representationName('ReferencesTable') or elementEditor.representationName('AdvancedReferencesTable'))]
[initSignatureDocumentationImplementation(elementEditor, fullInterfacePath)/]
[elementEditor.initSignature()/] {
		[referencedView.name.toJavaIdentifier()/]PropertiesEditionPart.init[elementEditor.viewPackageSignature()/](current, containingFeature, feature);
	}

[updateSignatureDocumentationImplementation(elementEditor, fullInterfacePath)/]
[elementEditor.updateSignature()/] {
		[referencedView.name.toJavaIdentifier()/]PropertiesEditionPart.update[elementEditor.viewPackageSignature()/](newValue);
	}

[addFilterSignatureDocumentationImplementation(elementEditor, fullInterfacePath)/]
[elementEditor.addFilterSignature()/] {
		[referencedView.name.toJavaIdentifier()/]PropertiesEditionPart.addFilterTo[elementEditor.viewPackageSignature()/](filter);
	}

[addBusinessFilterSignatureDocumentationImplementation(elementEditor, fullInterfacePath)/]
[elementEditor.addBusinessFilterSignature()/] {
		[referencedView.name.toJavaIdentifier()/]PropertiesEditionPart.addBusinessFilterTo[elementEditor.viewPackageSignature()/](filter);
	}

[isContainedInTableSignatureDocumentationImplementation(elementEditor, fullInterfacePath)/]
[elementEditor.isContainedInTableSignature()/] {
		return [referencedView.name.toJavaIdentifier()/]PropertiesEditionPart.isContainedIn[elementEditor.viewPackageSignature()/]Table(element);
	}
[/template]

[template public initSignatureDocumentationImplementation(elementEditor : ElementEditor, fullInterfacePath : String) overrides initSignatureDocumentationImplementation ? (elementEditor.representationName('ReferencesTable') or elementEditor.representationName('AdvancedReferencesTable'))]
	/**
	 * {@inheritDoc}
	 * 
	 * @see [fullInterfacePath/]#init[elementEditor.viewPackageSignature()/](org.eclipse.emf.eef.runtime.ui.widgets.referencestable.ReferencesTableSettings)
	 */
[/template]

[template public initSignatureImplementation(elementEditor : ElementEditor) overrides initSignatureImplementation ? (elementEditor.representationName('ReferencesTable') or elementEditor.representationName('AdvancedReferencesTable'))]
[elementEditor.initSignature()/] {
		if (current.eResource() != null && current.eResource().getResourceSet() != null)
			this.resourceSet = current.eResource().getResourceSet();
		ReferencesTableContentProvider contentProvider = new ReferencesTableContentProvider();
		[elementEditor.name.toJavaIdentifier()/].setContentProvider(contentProvider);
		[elementEditor.name.toJavaIdentifier()/].setInput(settings);
	}
[/template]

[template public addFilterSignatureImplementation(elementEditor : ElementEditor) ? (elementEditor.representationName('ReferencesTable') or elementEditor.representationName('AdvancedReferencesTable'))]
[elementEditor.addFilterSignature()/] {
		[elementEditor.name.toJavaIdentifier()/]Filters.add(filter);
	}
[/template]

[template public addBusinessFilterSignatureImplementation(elementEditor : ElementEditor) ? (elementEditor.representationName('ReferencesTable') or elementEditor.representationName('AdvancedReferencesTable'))]
[elementEditor.addBusinessFilterSignature()/] {
		[elementEditor.name.toJavaIdentifier()/]BusinessFilters.add(filter);
	}
[/template]

[template public isContainedInTableSignatureImplementation(elementEditor : ElementEditor) ? (elementEditor.representationName('ReferencesTable') or elementEditor.representationName('AdvancedReferencesTable'))]
[elementEditor.isContainedInTableSignature()/] {
		return ((ReferencesTableSettings)[elementEditor.name.toJavaIdentifier()/].getInput()).contains(element);
	}
[/template]
