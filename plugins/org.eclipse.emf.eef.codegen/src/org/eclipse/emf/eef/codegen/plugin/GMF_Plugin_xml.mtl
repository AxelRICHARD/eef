[comment encoding = UTF-8
 *******************************************************************************
 * Copyright (c) 2008-2009 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************
 /]
[module GMF_Plugin_xml('http://www.eclipse.org/emf/eef/components/1.0.0', 'http://www.eclipse.org/emf/eef/views/1.0.0', 'http://www.eclipse.org/emf/2002/Ecore', 'http://www.eclipse.org/emf/2002/GenModel')/]

[import org::eclipse::emf::eef::codegen::services::common /]
[import org::eclipse::emf::eef::codegen::services::naming /]

[**
 * @deprecated
 */]
[template public GMF_Plugin_xml(editionContext : PropertiesEditionContext, basePackage : String)]
	[file (editionContext.model.ecorePackage.name.concat('_properties.plugin.xml'), false)]

	<extension point="org.eclipse.ui.views.properties.tabbed.propertyContributor">
	[if (editionContext.contributorID(basePackage)->notEmpty())]
		<propertyContributor contributorId="[editionContext.contributorID(basePackage).trim()/]" labelProvider="[editionContext.labelProvider()/]">
	[else]
		<propertyContributor contributorId="org.eclipse.gmf.runtime.diagram.ui.properties" labelProvider="org.eclipse.gmf.runtime.common.ui.services.util.CommonLabelProvider">
	[/if]
			<propertyCategory
				category="default">
			</propertyCategory>
			<propertyCategory
				category="extended">
			</propertyCategory>
			<propertyCategory
				category="advanced">
			</propertyCategory>
		</propertyContributor>
	</extension>

	<extension point="org.eclipse.ui.views.properties.tabbed.propertyTabs">
[if (editionContext.contributorID(basePackage)->notEmpty())]
		<propertyTabs contributorId="[editionContext.contributorID(basePackage).trim()/]">
[else]
		<propertyTabs contributorId="org.eclipse.gmf.runtime.diagram.ui.properties">
[/if]
			<propertyTab
				label="Base"
				category="default"
				id="Base">
			</propertyTab>
			<propertyTab
				label="Propriétés"
				category="extended"
				id="Proprietes">
			</propertyTab>
			<propertyTab
				label="Stéréotypes"
				category="extended"
				id="Stereotypes">
			</propertyTab>
[for (pec : PropertiesEditionComponent | editionContext.eAllContents(PropertiesEditionComponent))]
[if (pec.explicit)]
[for (view : View | pec.involvedViews()->asOrderedSet())][if (view.viewKey(pec) <> 'Base' and view.viewKey(pec) <> 'Propriétés' and view.viewKey(pec) <> 'Stéréotypes')]
[editionContext.propertyTab(basePackage, view, pec)/]
[/if][/for]
[/if]
[/for]
		</propertyTabs>
	</extension>
	<extension point="org.eclipse.ui.views.properties.tabbed.propertySections">
[if (editionContext.contributorID(basePackage)->notEmpty())]
		<propertySections contributorId="[editionContext.contributorID(basePackage).trim()/]">
[else]
		<propertySections contributorId="org.eclipse.gmf.runtime.diagram.ui.properties">
[/if]
[for (pec : PropertiesEditionComponent | editionContext.eAllContents(PropertiesEditionComponent)) ? (pec.mustBeGenerated())]
[for (view : View | pec.views->asOrderedSet()) ? (view.explicit)]
			<propertySection
				class="[pec.qualifiedPropertySection(view)/]"
				filter="[pec.qualifiedPropertySection(view)/]"
				id="[pec.editionContext().contextCompletePackage()/].section.[pec.propertySection(view)/]"
[if (pec.involvedViews()->indexOf(view) = 1)]
				tab="Base">
[else]
				tab="[pec.pecModelQualifiedClass()/].[view.viewKey(pec).toASCII().replaceAll(' ', '_')/]">
[/if]
			</propertySection>
[/for]
[/for]
		</propertySections>
	</extension>
	[/file]
[/template]

[template public propertyTab(editionContext : PropertiesEditionContext, basePackage : String, view : View, pec : PropertiesEditionComponent)]
			<propertyTab
				label="[view.viewKey(pec).trim()/]"
				category="extended"
				id="[pec.model.ePackage.associatedGenPackage().basePackage/].[pec.model.ePackage.name/].[pec.model.name/].[view.viewKey(pec).toASCII().replaceAll(' ', '_')/]"
[if (pec.involvedViews()->indexOf(view) = 2)]
				afterTab="Base">
[else]
				afterTab="[pec.model.ePackage.associatedGenPackage().basePackage/].[pec.model.ePackage.name/].[pec.model.name/].[pec.previousView(view).name.toASCII().replaceAll(' ', '_')/]">
[/if]
			</propertyTab>
[/template]

[template public labelProvider(editionContext : PropertiesEditionContext)]
org.eclipse.gmf.runtime.common.ui.services.util.CommonLabelProvider
[/template]

[query public previousView(pec : PropertiesEditionComponent, view : View) : View = 
	pec.involvedViews()->at(pec.involvedViews()->indexOf(view) - 1)/]

